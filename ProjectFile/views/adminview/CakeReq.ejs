<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cake Requests</title>
    <link rel="stylesheet" href="/css/cakereqstyle.css">
    <link href="https://fonts.googleapis.com/css2?family=Dancing+Script:wght@400;700&display=swap" rel="stylesheet">

</head>
<body>

    <!-- Include the Navbar -->
    <%- include('../partials/loginnavbar') %>

    <!-- Orders Container -->
    <div class="orders-container" id="ordersContainer">

        <% const statuses = ["New", "Pending", "Completed"]; %>
        <% statuses.forEach(status => { %>
            <div id="<%= status.toLowerCase() %>Orders">
                <h2><%= status %> Orders</h2>
                <div class="orders-grid" id="<%= status.toLowerCase() %>Grid">
                    <% cakeOrders.forEach(order => { %>
                        <% if (order.status === status) { %>
                            <div class="order-card">
                                <div class="order-header">
                                    <div class="order-title"><strong>Order ID:</strong> <%= order.OrderID %></div>
                                    <div class="dropdown-container">
                                        <select class="order-status" data-orderid="<%= order.OrderID %>">
                                            <% statuses.forEach(opt => { %>
                                                <option value="<%= opt %>" <%= order.status === opt ? "selected" : "" %>><%= opt %></option>
                                            <% }) %>
                                        </select>                                    
                                    </div>
                                </div>                            
                                <div class="customer-name"><strong>Customer:</strong> <%= order.name %></div>
                                <div class="order-details">
                                    <p><strong>Email:</strong> <%= order.email %></p>
                                    <p><strong>Phone:</strong> <%= order.phone %></p>
                                    <p><strong>Needed By:</strong> <%= new Date(order.needByDate).toLocaleDateString('en-US') %></p>
                                    <p><strong>Cake Type:</strong> <%= order.cakeType %></p>
                                    <p><strong>Frosting:</strong> <%= order.frosting %></p>
                                    <p><strong>Size:</strong> <%= order.size %></p>
                                    <p><strong>Shape:</strong> <%= order.shape %></p>
                                    
                                    <% if (order.description && order.description.trim() !== "") { %>
                                        <button class="view-more-btn" data-description="<%= order.description.replace(/"/g, '&quot;').replace(/'/g, "\\'") %>">
                                            View More
                                        </button>
                                    <% } else { %>
                                        <p><strong>Description:</strong> No description provided.</p>
                                    <% } %>
                                </div>
                            </div>
                        <% } %>
                    <% }) %>
                </div>
            </div>
            <% if (status !== "Completed") { %>
                <hr class="section-divider">
            <% } %>
        <% }) %>

    </div>

    <!-- Description Popup Modal -->
    <div id="descriptionModal" class="modal">
        <div class="modal-content">
            <span class="close-btn" onclick="closeDescription()">&times;</span>
            <h3>Order Description</h3>
            <p id="descriptionText"></p>
        </div>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const modal = document.getElementById("descriptionModal");
            const modalContent = document.querySelector(".modal-content");
            const descriptionText = document.getElementById("descriptionText");

            // Handle Order Status Change
            document.querySelectorAll(".order-status").forEach(select => {
                select.addEventListener("change", function () {
                    const orderID = this.dataset.orderid;
                    const newStatus = this.value;
                    const orderCard = this.closest(".order-card");
    
                    // Send status update to backend
                    fetch("/update_order_status", {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({ orderID, status: newStatus })
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            console.log(`Order ${orderID} status updated to ${newStatus}`);
                            moveOrder(orderCard, newStatus);
                        } else {
                            alert("Failed to update order status.");
                        }
                    })
                    .catch(error => console.error("Error updating order:", error));
                });
            });
    
            function moveOrder(orderCard, status) {
                // Remove the order card from its current section
                orderCard.remove();
    
                // Append it to the correct section based on the new status
                const targetGrid = document.getElementById(status.toLowerCase() + "Grid");
                if (targetGrid) {
                    targetGrid.appendChild(orderCard);
                }
            }
    
            // Ensure modal is hidden on page load
            modal.style.display = "none";

            // Attach event listener to "View More" buttons
            document.querySelectorAll(".view-more-btn").forEach(button => {
                button.addEventListener("click", function () {
                    // Get description from the button's data attribute
                    const description = this.getAttribute("data-description") || "No description provided.";
    
                    // Set the modal content
                    descriptionText.innerText = description;

                    // Show the modal
                    modal.style.display = "flex";
                });
            });
    
            // Close modal when clicking outside of it or on the close button
            modal.addEventListener("click", function (event) {
                if (event.target === modal || event.target.classList.contains("close-btn")) {
                    modal.style.display = "none";
                }
            });
        });
    </script>
    
    
</body>
</html>
